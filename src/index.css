/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *, :before, :after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-space-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
    }
  }
}

@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --color-gray-50: oklch(.985 .002 247.839);
    --color-gray-100: oklch(.967 .003 264.542);
    --color-gray-300: oklch(.872 .01 258.338);
    --spacing: .25rem;
    --text-xs: .75rem;
    --text-xs--line-height: calc(1 / .75);
    --text-sm: .875rem;
    --text-sm--line-height: calc(1.25 / .875);
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-bold: 700;
    --radius-2xl: 1rem;
    --animate-spin: spin 1s linear infinite;
    --animate-bounce: bounce 1s infinite;
    --blur-sm: 8px;
    --default-transition-duration: .15s;
    --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(--font-sans--font-variation-settings);
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(--font-mono--font-feature-settings);
    --default-mono-font-variation-settings: var(--font-mono--font-variation-settings);
  }
}

@layer base {
  *, :after, :before, ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  html, :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }

  body {
    line-height: inherit;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b, strong {
    font-weight: bolder;
  }

  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub, sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }

  sub {
    bottom: -.25em;
  }

  sup {
    top: -.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol, ul, menu {
    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {
    vertical-align: middle;
    display: block;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  button, input, select, optgroup, textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }

  ::file-selector-button {
    margin-inline-end: 4px;
  }

  ::placeholder {
    opacity: 1;
    color: currentColor;
  }

  @supports (color: color-mix(in lab, red, red)) {
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button, input:where([type="button"], [type="reset"], [type="submit"]) {
    appearance: button;
  }

  ::file-selector-button {
    appearance: button;
  }

  ::-webkit-inner-spin-button {
    height: auto;
  }

  ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }

  * {
    border-color: var(--border);
    outline-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  body {
    background-color: var(--background);
    color: var(--foreground);
  }

  * {
    border-color: var(--border);
    outline-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  body {
    color: #2c2c2c;
    background-color: #faf7f2;
    font-family: Inter, -apple-system, BlinkMacSystemFont, Segoe UI, sans-serif;
  }

  html {
    font-size: var(--font-size);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h1 {
    font-weight: var(--font-weight-bold);
    letter-spacing: -.01em;
    line-height: 1.125;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h2 {
    font-weight: var(--font-weight-bold);
    letter-spacing: -.005em;
    line-height: 1.167;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h3 {
    font-weight: var(--font-weight-medium);
    letter-spacing: 0;
    line-height: 1.222;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h4 {
    font-weight: var(--font-weight-medium);
    letter-spacing: 0;
    line-height: 1.333;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) p {
    font-weight: var(--font-weight-normal);
    letter-spacing: 0;
    line-height: 1.625;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) label, :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) button {
    font-weight: var(--font-weight-medium);
    letter-spacing: .3px;
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) input {
    font-weight: var(--font-weight-normal);
    letter-spacing: 0;
    line-height: 1.5;
  }
}

@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }

  .absolute {
    position: absolute;
  }

  .fixed {
    position: fixed;
  }

  .relative {
    position: relative;
  }

  .sticky {
    position: sticky;
  }

  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }

  .-top-3 {
    top: calc(var(--spacing) * -3);
  }

  .top-0 {
    top: calc(var(--spacing) * 0);
  }

  .top-1\/2 {
    top: 50%;
  }

  .top-4 {
    top: calc(var(--spacing) * 4);
  }

  .top-8 {
    top: calc(var(--spacing) * 8);
  }

  .top-12 {
    top: calc(var(--spacing) * 12);
  }

  .top-16 {
    top: calc(var(--spacing) * 16);
  }

  .top-24 {
    top: calc(var(--spacing) * 24);
  }

  .right-0 {
    right: calc(var(--spacing) * 0);
  }

  .right-2 {
    right: calc(var(--spacing) * 2);
  }

  .right-4 {
    right: calc(var(--spacing) * 4);
  }

  .right-8 {
    right: calc(var(--spacing) * 8);
  }

  .-bottom-6 {
    bottom: calc(var(--spacing) * -6);
  }

  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }

  .bottom-4 {
    bottom: calc(var(--spacing) * 4);
  }

  .bottom-8 {
    bottom: calc(var(--spacing) * 8);
  }

  .bottom-10 {
    bottom: calc(var(--spacing) * 10);
  }

  .left-0 {
    left: calc(var(--spacing) * 0);
  }

  .left-1\/2 {
    left: 50%;
  }

  .left-4 {
    left: calc(var(--spacing) * 4);
  }

  .left-8 {
    left: calc(var(--spacing) * 8);
  }

  .left-\[calc\(50\%\+32px\)\] {
    left: calc(50% + 32px);
  }

  .left-\[calc\(50\%\+40px\)\] {
    left: calc(50% + 40px);
  }

  .z-10 {
    z-index: 10;
  }

  .z-50 {
    z-index: 50;
  }

  .-mx-1 {
    margin-inline: calc(var(--spacing) * -1);
  }

  .mx-8 {
    margin-inline: calc(var(--spacing) * 8);
  }

  .mx-auto {
    margin-inline: auto;
  }

  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }

  .mt-0\.5 {
    margin-top: calc(var(--spacing) * .5);
  }

  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }

  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }

  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }

  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }

  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }

  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }

  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }

  .mt-32 {
    margin-top: calc(var(--spacing) * 32);
  }

  .mt-auto {
    margin-top: auto;
  }

  .mb-0\.5 {
    margin-bottom: calc(var(--spacing) * .5);
  }

  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }

  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }

  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }

  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }

  .mb-5 {
    margin-bottom: calc(var(--spacing) * 5);
  }

  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }

  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }

  .mb-10 {
    margin-bottom: calc(var(--spacing) * 10);
  }

  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }

  .mb-16 {
    margin-bottom: calc(var(--spacing) * 16);
  }

  .mb-20 {
    margin-bottom: calc(var(--spacing) * 20);
  }

  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }

  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }

  .ml-9 {
    margin-left: calc(var(--spacing) * 9);
  }

  .ml-40 {
    margin-left: calc(var(--spacing) * 40);
  }

  .line-clamp-2 {
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .block {
    display: block;
  }

  .flex {
    display: flex;
  }

  .grid {
    display: grid;
  }

  .hidden {
    display: none;
  }

  .inline-block {
    display: inline-block;
  }

  .inline-flex {
    display: inline-flex;
  }

  .aspect-\[4\/3\] {
    aspect-ratio: 4 / 3;
  }

  .aspect-square {
    aspect-ratio: 1;
  }

  .size-3\.5 {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }

  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }

  .h-0\.5 {
    height: calc(var(--spacing) * .5);
  }

  .h-1 {
    height: calc(var(--spacing) * 1);
  }

  .h-3 {
    height: calc(var(--spacing) * 3);
  }

  .h-3\.5 {
    height: calc(var(--spacing) * 3.5);
  }

  .h-4 {
    height: calc(var(--spacing) * 4);
  }

  .h-5 {
    height: calc(var(--spacing) * 5);
  }

  .h-6 {
    height: calc(var(--spacing) * 6);
  }

  .h-7 {
    height: calc(var(--spacing) * 7);
  }

  .h-8 {
    height: calc(var(--spacing) * 8);
  }

  .h-10 {
    height: calc(var(--spacing) * 10);
  }

  .h-11 {
    height: calc(var(--spacing) * 11);
  }

  .h-12 {
    height: calc(var(--spacing) * 12);
  }

  .h-14 {
    height: calc(var(--spacing) * 14);
  }

  .h-16 {
    height: calc(var(--spacing) * 16);
  }

  .h-20 {
    height: calc(var(--spacing) * 20);
  }

  .h-24 {
    height: calc(var(--spacing) * 24);
  }

  .h-96 {
    height: calc(var(--spacing) * 96);
  }

  .h-\[2px\] {
    height: 2px;
  }

  .h-\[100vh\] {
    height: 100vh;
  }

  .h-\[320px\] {
    height: 320px;
  }

  .h-\[400px\] {
    height: 400px;
  }

  .h-\[var\(--radix-select-trigger-height\)\] {
    height: var(--radix-select-trigger-height);
  }

  .h-full {
    height: 100%;
  }

  .h-px {
    height: 1px;
  }

  .h-screen {
    height: 100vh;
  }

  .max-h-\(--radix-select-content-available-height\) {
    max-height: var(--radix-select-content-available-height);
  }

  .max-h-\[1000px\] {
    max-height: 1000px;
  }

  .min-h-\[700px\] {
    min-height: 700px;
  }

  .min-h-screen {
    min-height: 100vh;
  }

  .w-0 {
    width: calc(var(--spacing) * 0);
  }

  .w-0\.5 {
    width: calc(var(--spacing) * .5);
  }

  .w-3 {
    width: calc(var(--spacing) * 3);
  }

  .w-3\.5 {
    width: calc(var(--spacing) * 3.5);
  }

  .w-4 {
    width: calc(var(--spacing) * 4);
  }

  .w-5 {
    width: calc(var(--spacing) * 5);
  }

  .w-6 {
    width: calc(var(--spacing) * 6);
  }

  .w-7 {
    width: calc(var(--spacing) * 7);
  }

  .w-8 {
    width: calc(var(--spacing) * 8);
  }

  .w-10 {
    width: calc(var(--spacing) * 10);
  }

  .w-12 {
    width: calc(var(--spacing) * 12);
  }

  .w-14 {
    width: calc(var(--spacing) * 14);
  }

  .w-16 {
    width: calc(var(--spacing) * 16);
  }

  .w-20 {
    width: calc(var(--spacing) * 20);
  }

  .w-24 {
    width: calc(var(--spacing) * 24);
  }

  .w-30 {
    width: calc(var(--spacing) * 30);
  }

  .w-\[calc\(100\%-64px\)\] {
    width: calc(100% - 64px);
  }

  .w-\[calc\(100\%-80px\)\] {
    width: calc(100% - 80px);
  }

  .w-full {
    width: 100%;
  }

  .max-w-\[280px\] {
    max-width: 280px;
  }

  .max-w-\[400px\] {
    max-width: 400px;
  }

  .max-w-\[480px\] {
    max-width: 480px;
  }

  .max-w-\[500px\] {
    max-width: 500px;
  }

  .max-w-\[520px\] {
    max-width: 520px;
  }

  .max-w-\[560px\] {
    max-width: 560px;
  }

  .max-w-\[600px\] {
    max-width: 600px;
  }

  .max-w-\[680px\] {
    max-width: 680px;
  }

  .max-w-\[700px\] {
    max-width: 700px;
  }

  .max-w-\[800px\] {
    max-width: 800px;
  }

  .max-w-\[900px\] {
    max-width: 900px;
  }

  .max-w-\[1000px\] {
    max-width: 1000px;
  }

  .max-w-\[1200px\] {
    max-width: 1200px;
  }

  .max-w-\[1440px\] {
    max-width: 1440px;
  }

  .max-w-\[1600px\] {
    max-width: 1600px;
  }

  .min-w-\[8rem\] {
    min-width: 8rem;
  }

  .min-w-\[var\(--radix-select-trigger-width\)\] {
    min-width: var(--radix-select-trigger-width);
  }

  .flex-1 {
    flex: 1;
  }

  .flex-shrink-0, .shrink-0 {
    flex-shrink: 0;
  }

  .grow {
    flex-grow: 1;
  }

  .origin-\(--radix-select-content-transform-origin\) {
    transform-origin: var(--radix-select-content-transform-origin);
  }

  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .scale-110 {
    --tw-scale-x: 110%;
    --tw-scale-y: 110%;
    --tw-scale-z: 110%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .rotate-180 {
    rotate: 180deg;
  }

  .animate-bounce {
    animation: var(--animate-bounce);
  }

  .animate-in {
    animation: enter var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .animate-spin {
    animation: var(--animate-spin);
  }

  .cursor-default {
    cursor: default;
  }

  .cursor-pointer {
    cursor: pointer;
  }

  .touch-none {
    touch-action: none;
  }

  .resize-y {
    resize: vertical;
  }

  .scroll-my-1 {
    scroll-margin-block: calc(var(--spacing) * 1);
  }

  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .flex-col {
    flex-direction: column;
  }

  .flex-wrap {
    flex-wrap: wrap;
  }

  .items-center {
    align-items: center;
  }

  .items-start {
    align-items: flex-start;
  }

  .justify-between {
    justify-content: space-between;
  }

  .justify-center {
    justify-content: center;
  }

  .gap-0 {
    gap: calc(var(--spacing) * 0);
  }

  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }

  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }

  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }

  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }

  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }

  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }

  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }

  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }

  .gap-14 {
    gap: calc(var(--spacing) * 14);
  }

  .gap-16 {
    gap: calc(var(--spacing) * 16);
  }

  .gap-20 {
    gap: calc(var(--spacing) * 20);
  }

  .gap-\[6px\] {
    gap: 6px;
  }

  :where(.space-y-2 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-3 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-4 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-6 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-8 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-12 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 12) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 12) * calc(1 - var(--tw-space-y-reverse)));
  }

  .gap-x-16 {
    column-gap: calc(var(--spacing) * 16);
  }

  .gap-y-1 {
    row-gap: calc(var(--spacing) * 1);
  }

  .gap-y-8 {
    row-gap: calc(var(--spacing) * 8);
  }

  .self-start {
    align-self: flex-start;
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .overflow-x-hidden {
    overflow-x: hidden;
  }

  .overflow-y-auto {
    overflow-y: auto;
  }

  .rounded {
    border-radius: .25rem;
  }

  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }

  .rounded-full {
    border-radius: 3.40282e38px;
  }

  .rounded-lg {
    border-radius: 1rem;
  }

  .rounded-md {
    border-radius: .5rem;
  }

  .rounded-sm {
    border-radius: .25rem;
  }

  .rounded-xl {
    border-radius: 1.5rem;
  }

  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }

  .border-4 {
    border-style: var(--tw-border-style);
    border-width: 4px;
  }

  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }

  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .border-\[\#E5E5E5\] {
    border-color: #e5e5e5;
  }

  .border-\[\#E8E8E8\] {
    border-color: #e8e8e8;
  }

  .border-deep-charcoal\/20 {
    border-color: var(--deep-charcoal);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-deep-charcoal\/20 {
      border-color: color-mix(in oklab, var(--deep-charcoal) 20%, transparent);
    }
  }

  .border-gray-100 {
    border-color: var(--color-gray-100);
  }

  .border-input {
    border-color: var(--input);
  }

  .border-sage-green {
    border-color: var(--sage-green);
  }

  .border-sage-green\/20 {
    border-color: var(--sage-green);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-sage-green\/20 {
      border-color: color-mix(in oklab, var(--sage-green) 20%, transparent);
    }
  }

  .border-transparent {
    border-color: #0000;
  }

  .border-warm-taupe {
    border-color: var(--warm-taupe);
  }

  .border-warm-taupe\/10 {
    border-color: var(--warm-taupe);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-warm-taupe\/10 {
      border-color: color-mix(in oklab, var(--warm-taupe) 10%, transparent);
    }
  }

  .border-warm-taupe\/20 {
    border-color: var(--warm-taupe);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-warm-taupe\/20 {
      border-color: color-mix(in oklab, var(--warm-taupe) 20%, transparent);
    }
  }

  .border-warm-taupe\/30 {
    border-color: var(--warm-taupe);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-warm-taupe\/30 {
      border-color: color-mix(in oklab, var(--warm-taupe) 30%, transparent);
    }
  }

  .border-warm-white {
    border-color: var(--warm-white);
  }

  .border-warm-white\/20 {
    border-color: var(--warm-white);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-warm-white\/20 {
      border-color: color-mix(in oklab, var(--warm-white) 20%, transparent);
    }
  }

  .bg-\[\#E8E8E8\] {
    background-color: #e8e8e8;
  }

  .bg-\[\#F5F5F5\]\/60 {
    background-color: oklab(97.0151% 2.98023e-8 0 / .6);
  }

  .bg-border {
    background-color: var(--border);
  }

  .bg-deep-charcoal\/80 {
    background-color: var(--deep-charcoal);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-deep-charcoal\/80 {
      background-color: color-mix(in oklab, var(--deep-charcoal) 80%, transparent);
    }
  }

  .bg-deep-charcoal\/90 {
    background-color: var(--deep-charcoal);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-deep-charcoal\/90 {
      background-color: color-mix(in oklab, var(--deep-charcoal) 90%, transparent);
    }
  }

  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }

  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }

  .bg-input-background {
    background-color: var(--input-background);
  }

  .bg-popover {
    background-color: var(--popover);
  }

  .bg-sage-green\/4 {
    background-color: var(--sage-green);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-sage-green\/4 {
      background-color: color-mix(in oklab, var(--sage-green) 4%, transparent);
    }
  }

  .bg-sage-green\/5 {
    background-color: var(--sage-green);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-sage-green\/5 {
      background-color: color-mix(in oklab, var(--sage-green) 5%, transparent);
    }
  }

  .bg-sage-green\/6 {
    background-color: var(--sage-green);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-sage-green\/6 {
      background-color: color-mix(in oklab, var(--sage-green) 6%, transparent);
    }
  }

  .bg-sage-green\/8 {
    background-color: var(--sage-green);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-sage-green\/8 {
      background-color: color-mix(in oklab, var(--sage-green) 8%, transparent);
    }
  }

  .bg-sage-green\/10 {
    background-color: var(--sage-green);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-sage-green\/10 {
      background-color: color-mix(in oklab, var(--sage-green) 10%, transparent);
    }
  }

  .bg-sage-green\/15 {
    background-color: var(--sage-green);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-sage-green\/15 {
      background-color: color-mix(in oklab, var(--sage-green) 15%, transparent);
    }
  }

  .bg-sage-green\/20 {
    background-color: var(--sage-green);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-sage-green\/20 {
      background-color: color-mix(in oklab, var(--sage-green) 20%, transparent);
    }
  }

  .bg-sage-green\/95 {
    background-color: var(--sage-green);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-sage-green\/95 {
      background-color: color-mix(in oklab, var(--sage-green) 95%, transparent);
    }
  }

  .bg-transparent {
    background-color: #0000;
  }

  .bg-warm-taupe\/5 {
    background-color: var(--warm-taupe);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-warm-taupe\/5 {
      background-color: color-mix(in oklab, var(--warm-taupe) 5%, transparent);
    }
  }

  .bg-warm-taupe\/10 {
    background-color: var(--warm-taupe);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-warm-taupe\/10 {
      background-color: color-mix(in oklab, var(--warm-taupe) 10%, transparent);
    }
  }

  .bg-warm-taupe\/20 {
    background-color: var(--warm-taupe);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-warm-taupe\/20 {
      background-color: color-mix(in oklab, var(--warm-taupe) 20%, transparent);
    }
  }

  .bg-warm-white\/80 {
    background-color: var(--warm-white);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-warm-white\/80 {
      background-color: color-mix(in oklab, var(--warm-white) 80%, transparent);
    }
  }

  .bg-warm-white\/95 {
    background-color: var(--warm-white);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-warm-white\/95 {
      background-color: color-mix(in oklab, var(--warm-white) 95%, transparent);
    }
  }

  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-t {
    --tw-gradient-position: to top in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .from-deep-charcoal {
    --tw-gradient-from: var(--deep-charcoal);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-deep-charcoal\/50 {
    --tw-gradient-from: var(--deep-charcoal);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-deep-charcoal\/50 {
      --tw-gradient-from: color-mix(in oklab, var(--deep-charcoal) 50%, transparent);
    }
  }

  .from-sage-green\/10 {
    --tw-gradient-from: var(--sage-green);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-sage-green\/10 {
      --tw-gradient-from: color-mix(in oklab, var(--sage-green) 10%, transparent);
    }
  }

  .from-sage-green\/20 {
    --tw-gradient-from: var(--sage-green);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-sage-green\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--sage-green) 20%, transparent);
    }
  }

  .via-warm-white {
    --tw-gradient-via: var(--warm-white);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .to-deep-charcoal\/90 {
    --tw-gradient-to: var(--deep-charcoal);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-deep-charcoal\/90 {
      --tw-gradient-to: color-mix(in oklab, var(--deep-charcoal) 90%, transparent);
    }
  }

  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-warm-taupe\/10 {
    --tw-gradient-to: var(--warm-taupe);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-warm-taupe\/10 {
      --tw-gradient-to: color-mix(in oklab, var(--warm-taupe) 10%, transparent);
    }
  }

  .to-warm-taupe\/20 {
    --tw-gradient-to: var(--warm-taupe);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-warm-taupe\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--warm-taupe) 20%, transparent);
    }
  }

  .fill-sage-green {
    fill: var(--sage-green);
  }

  .object-cover {
    object-fit: cover;
  }

  .p-1 {
    padding: calc(var(--spacing) * 1);
  }

  .p-4 {
    padding: calc(var(--spacing) * 4);
  }

  .p-5 {
    padding: calc(var(--spacing) * 5);
  }

  .p-6 {
    padding: calc(var(--spacing) * 6);
  }

  .p-8 {
    padding: calc(var(--spacing) * 8);
  }

  .p-12 {
    padding: calc(var(--spacing) * 12);
  }

  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }

  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }

  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }

  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }

  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }

  .px-10 {
    padding-inline: calc(var(--spacing) * 10);
  }

  .px-12 {
    padding-inline: calc(var(--spacing) * 12);
  }

  .px-16 {
    padding-inline: calc(var(--spacing) * 16);
  }

  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }

  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }

  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }

  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }

  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }

  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }

  .py-14 {
    padding-block: calc(var(--spacing) * 14);
  }

  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }

  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }

  .py-24 {
    padding-block: calc(var(--spacing) * 24);
  }

  .py-32 {
    padding-block: calc(var(--spacing) * 32);
  }

  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }

  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }

  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }

  .pt-16 {
    padding-top: calc(var(--spacing) * 16);
  }

  .pt-20 {
    padding-top: calc(var(--spacing) * 20);
  }

  .pt-32 {
    padding-top: calc(var(--spacing) * 32);
  }

  .pr-8 {
    padding-right: calc(var(--spacing) * 8);
  }

  .pr-12 {
    padding-right: calc(var(--spacing) * 12);
  }

  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }

  .pb-6 {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .pb-8 {
    padding-bottom: calc(var(--spacing) * 8);
  }

  .pb-10 {
    padding-bottom: calc(var(--spacing) * 10);
  }

  .pb-16 {
    padding-bottom: calc(var(--spacing) * 16);
  }

  .pb-24 {
    padding-bottom: calc(var(--spacing) * 24);
  }

  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }

  .pl-12 {
    padding-left: calc(var(--spacing) * 12);
  }

  .text-center {
    text-align: center;
  }

  .text-left {
    text-align: left;
  }

  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .text-\[13px\] {
    font-size: 13px;
  }

  .text-\[20px\] {
    font-size: 20px;
  }

  .text-\[24px\] {
    font-size: 24px;
  }

  .text-\[32px\] {
    font-size: 32px;
  }

  .leading-\[13px\] {
    --tw-leading: 13px;
    line-height: 13px;
  }

  .leading-\[20px\] {
    --tw-leading: 20px;
    line-height: 20px;
  }

  .leading-\[32px\] {
    --tw-leading: 32px;
    line-height: 32px;
  }

  .leading-\[48px\] {
    --tw-leading: 48px;
    line-height: 48px;
  }

  .tracking-\[-0\.01em\] {
    --tw-tracking: -.01em;
    letter-spacing: -.01em;
  }

  .tracking-\[0\.8px\] {
    --tw-tracking: .8px;
    letter-spacing: .8px;
  }

  .tracking-\[1px\] {
    --tw-tracking: 1px;
    letter-spacing: 1px;
  }

  .whitespace-nowrap {
    white-space: nowrap;
  }

  .text-deep-charcoal\/40 {
    color: var(--deep-charcoal);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-deep-charcoal\/40 {
      color: color-mix(in oklab, var(--deep-charcoal) 40%, transparent);
    }
  }

  .text-deep-charcoal\/50 {
    color: var(--deep-charcoal);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-deep-charcoal\/50 {
      color: color-mix(in oklab, var(--deep-charcoal) 50%, transparent);
    }
  }

  .text-deep-charcoal\/55 {
    color: var(--deep-charcoal);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-deep-charcoal\/55 {
      color: color-mix(in oklab, var(--deep-charcoal) 55%, transparent);
    }
  }

  .text-deep-charcoal\/60 {
    color: var(--deep-charcoal);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-deep-charcoal\/60 {
      color: color-mix(in oklab, var(--deep-charcoal) 60%, transparent);
    }
  }

  .text-deep-charcoal\/70 {
    color: var(--deep-charcoal);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-deep-charcoal\/70 {
      color: color-mix(in oklab, var(--deep-charcoal) 70%, transparent);
    }
  }

  .text-deep-charcoal\/80 {
    color: var(--deep-charcoal);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-deep-charcoal\/80 {
      color: color-mix(in oklab, var(--deep-charcoal) 80%, transparent);
    }
  }

  .text-muted-foreground {
    color: var(--muted-foreground);
  }

  .text-popover-foreground {
    color: var(--popover-foreground);
  }

  .text-sage-green\/25 {
    color: var(--sage-green);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-sage-green\/25 {
      color: color-mix(in oklab, var(--sage-green) 25%, transparent);
    }
  }

  .text-sage-green\/50 {
    color: var(--sage-green);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-sage-green\/50 {
      color: color-mix(in oklab, var(--sage-green) 50%, transparent);
    }
  }

  .text-warm-white\/50 {
    color: var(--warm-white);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-warm-white\/50 {
      color: color-mix(in oklab, var(--warm-white) 50%, transparent);
    }
  }

  .text-warm-white\/60 {
    color: var(--warm-white);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-warm-white\/60 {
      color: color-mix(in oklab, var(--warm-white) 60%, transparent);
    }
  }

  .text-warm-white\/70 {
    color: var(--warm-white);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-warm-white\/70 {
      color: color-mix(in oklab, var(--warm-white) 70%, transparent);
    }
  }

  .text-warm-white\/85 {
    color: var(--warm-white);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-warm-white\/85 {
      color: color-mix(in oklab, var(--warm-white) 85%, transparent);
    }
  }

  .text-warm-white\/90 {
    color: var(--warm-white);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-warm-white\/90 {
      color: color-mix(in oklab, var(--warm-white) 90%, transparent);
    }
  }

  .uppercase {
    text-transform: uppercase;
  }

  .italic {
    font-style: italic;
  }

  .opacity-0 {
    opacity: 0;
  }

  .opacity-40 {
    opacity: .4;
  }

  .opacity-50 {
    opacity: .5;
  }

  .shadow-\[0px_2px_8px_rgba\(44\,44\,44\,0\.04\)\] {
    --tw-shadow: 0px 2px 8px var(--tw-shadow-color, #2c2c2c0a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-\[0px_2px_8px_rgba\(44\,44\,44\,0\.15\)\] {
    --tw-shadow: 0px 2px 8px var(--tw-shadow-color, #2c2c2c26);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-\[0px_2px_16px_rgba\(44\,44\,44\,0\.04\)\] {
    --tw-shadow: 0px 2px 16px var(--tw-shadow-color, #2c2c2c0a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-\[0px_4px_16px_rgba\(44\,44\,44\,0\.06\)\] {
    --tw-shadow: 0px 4px 16px var(--tw-shadow-color, #2c2c2c0f);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-\[0px_4px_24px_rgba\(44\,44\,44\,0\.06\)\] {
    --tw-shadow: 0px 4px 24px var(--tw-shadow-color, #2c2c2c0f);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-\[0px_4px_24px_rgba\(44\,44\,44\,0\.08\)\] {
    --tw-shadow: 0px 4px 24px var(--tw-shadow-color, #2c2c2c14);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-\[0px_4px_32px_rgba\(44\,44\,44\,0\.08\)\] {
    --tw-shadow: 0px 4px 32px var(--tw-shadow-color, #2c2c2c14);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-\[0px_8px_24px_rgba\(44\,44\,44\,0\.08\)\] {
    --tw-shadow: 0px 8px 24px var(--tw-shadow-color, #2c2c2c14);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-\[0px_8px_32px_rgba\(44\,44\,44\,0\.12\)\] {
    --tw-shadow: 0px 8px 32px var(--tw-shadow-color, #2c2c2c1f);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-sage-green {
    --tw-ring-color: var(--sage-green);
  }

  .ring-offset-2 {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }

  .ring-offset-warm-white {
    --tw-ring-offset-color: var(--warm-white);
  }

  .outline-hidden {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .outline-hidden {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .grayscale {
    --tw-grayscale: grayscale(100%);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .filter {
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .backdrop-blur-\[10px\] {
    --tw-backdrop-blur: blur(10px);
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-\[color\,box-shadow\] {
    transition-property: color, box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .duration-200 {
    --tw-duration: .2s;
    transition-duration: .2s;
  }

  .duration-300 {
    --tw-duration: .3s;
    transition-duration: .3s;
  }

  .duration-400 {
    --tw-duration: .4s;
    transition-duration: .4s;
  }

  .duration-500 {
    --tw-duration: .5s;
    transition-duration: .5s;
  }

  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }

  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }

  .fade-in {
    --tw-enter-opacity: 0;
  }

  .slide-in-from-bottom-4 {
    --tw-enter-translate-y: calc(4 * var(--spacing));
  }

  @media (hover: hover) {
    .group-hover\:w-full:is(:where(.group):hover *) {
      width: 100%;
    }
  }

  @media (hover: hover) {
    .group-hover\:translate-x-1:is(:where(.group):hover *) {
      --tw-translate-x: calc(var(--spacing) * 1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  @media (hover: hover) {
    .group-hover\:scale-105:is(:where(.group):hover *) {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .group-hover\:scale-\[1\.02\]:is(:where(.group):hover *) {
      scale: 1.02;
    }
  }

  @media (hover: hover) {
    .group-hover\:border-warm-taupe\/30:is(:where(.group):hover *) {
      border-color: var(--warm-taupe);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .group-hover\:border-warm-taupe\/30:is(:where(.group):hover *) {
        border-color: color-mix(in oklab, var(--warm-taupe) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .group-hover\:text-sage-green\/80:is(:where(.group):hover *) {
      color: var(--sage-green);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .group-hover\:text-sage-green\/80:is(:where(.group):hover *) {
        color: color-mix(in oklab, var(--sage-green) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .group-hover\:text-warm-taupe:is(:where(.group):hover *) {
      color: var(--warm-taupe);
    }
  }

  @media (hover: hover) {
    .group-hover\:opacity-100:is(:where(.group):hover *) {
      opacity: 1;
    }
  }

  @media (hover: hover) {
    .group-hover\:shadow-\[0px_8px_24px_rgba\(44\,44\,44\,0\.08\)\]:is(:where(.group):hover *) {
      --tw-shadow: 0px 8px 24px var(--tw-shadow-color, #2c2c2c14);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .placeholder\:text-deep-charcoal\/40::placeholder {
    color: var(--deep-charcoal);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .placeholder\:text-deep-charcoal\/40::placeholder {
      color: color-mix(in oklab, var(--deep-charcoal) 40%, transparent);
    }
  }

  @media (hover: hover) {
    .hover\:translate-y-\[-1px\]:hover {
      --tw-translate-y: -1px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  @media (hover: hover) {
    .hover\:translate-y-\[-2px\]:hover {
      --tw-translate-y: -2px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  @media (hover: hover) {
    .hover\:translate-y-\[-4px\]:hover {
      --tw-translate-y: -4px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  @media (hover: hover) {
    .hover\:scale-105:hover {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .hover\:scale-110:hover {
      --tw-scale-x: 110%;
      --tw-scale-y: 110%;
      --tw-scale-z: 110%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .hover\:scale-\[1\.02\]:hover {
      scale: 1.02;
    }
  }

  @media (hover: hover) {
    .hover\:border-gray-300:hover {
      border-color: var(--color-gray-300);
    }
  }

  @media (hover: hover) {
    .hover\:border-sage-green\/30:hover {
      border-color: var(--sage-green);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-sage-green\/30:hover {
        border-color: color-mix(in oklab, var(--sage-green) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:border-sage-green\/40:hover {
      border-color: var(--sage-green);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-sage-green\/40:hover {
        border-color: color-mix(in oklab, var(--sage-green) 40%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:border-warm-taupe\/30:hover {
      border-color: var(--warm-taupe);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-warm-taupe\/30:hover {
        border-color: color-mix(in oklab, var(--warm-taupe) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:border-warm-taupe\/40:hover {
      border-color: var(--warm-taupe);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-warm-taupe\/40:hover {
        border-color: color-mix(in oklab, var(--warm-taupe) 40%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:border-warm-taupe\/50:hover {
      border-color: var(--warm-taupe);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-warm-taupe\/50:hover {
        border-color: color-mix(in oklab, var(--warm-taupe) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:border-warm-taupe\/60:hover {
      border-color: var(--warm-taupe);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-warm-taupe\/60:hover {
        border-color: color-mix(in oklab, var(--warm-taupe) 60%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-\[\#7A8A7D\]:hover {
      background-color: #7a8a7d;
    }
  }

  @media (hover: hover) {
    .hover\:bg-\[\#7A9B7F\]:hover {
      background-color: #7a9b7f;
    }
  }

  @media (hover: hover) {
    .hover\:bg-\[\#B8A890\]:hover {
      background-color: #b8a890;
    }
  }

  @media (hover: hover) {
    .hover\:bg-deep-charcoal:hover {
      background-color: var(--deep-charcoal);
    }
  }

  @media (hover: hover) {
    .hover\:bg-deep-charcoal\/5:hover {
      background-color: var(--deep-charcoal);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-deep-charcoal\/5:hover {
        background-color: color-mix(in oklab, var(--deep-charcoal) 5%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-deep-charcoal\/90:hover {
      background-color: var(--deep-charcoal);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-deep-charcoal\/90:hover {
        background-color: color-mix(in oklab, var(--deep-charcoal) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-sage-green\/3:hover {
      background-color: var(--sage-green);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-sage-green\/3:hover {
        background-color: color-mix(in oklab, var(--sage-green) 3%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-sage-green\/5:hover {
      background-color: var(--sage-green);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-sage-green\/5:hover {
        background-color: color-mix(in oklab, var(--sage-green) 5%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-sage-green\/20:hover {
      background-color: var(--sage-green);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-sage-green\/20:hover {
        background-color: color-mix(in oklab, var(--sage-green) 20%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-warm-white:hover {
      background-color: var(--warm-white);
    }
  }

  @media (hover: hover) {
    .hover\:bg-warm-white\/60:hover {
      background-color: var(--warm-white);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-warm-white\/60:hover {
        background-color: color-mix(in oklab, var(--warm-white) 60%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-warm-white\/90:hover {
      background-color: var(--warm-white);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-warm-white\/90:hover {
        background-color: color-mix(in oklab, var(--warm-white) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:text-deep-charcoal:hover {
      color: var(--deep-charcoal);
    }
  }

  @media (hover: hover) {
    .hover\:text-sage-green:hover {
      color: var(--sage-green);
    }
  }

  @media (hover: hover) {
    .hover\:text-warm-taupe:hover {
      color: var(--warm-taupe);
    }
  }

  @media (hover: hover) {
    .hover\:text-warm-white:hover {
      color: var(--warm-white);
    }
  }

  @media (hover: hover) {
    .hover\:text-warm-white\/70:hover {
      color: var(--warm-white);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:text-warm-white\/70:hover {
        color: color-mix(in oklab, var(--warm-white) 70%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:shadow-\[0px_4px_16px_rgba\(44\,44\,44\,0\.08\)\]:hover {
      --tw-shadow: 0px 4px 16px var(--tw-shadow-color, #2c2c2c14);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-\[0px_8px_24px_rgba\(44\,44\,44\,0\.1\)\]:hover {
      --tw-shadow: 0px 8px 24px var(--tw-shadow-color, #2c2c2c1a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-\[0px_8px_24px_rgba\(44\,44\,44\,0\.08\)\]:hover {
      --tw-shadow: 0px 8px 24px var(--tw-shadow-color, #2c2c2c14);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-\[0px_8px_32px_rgba\(44\,44\,44\,0\.08\)\]:hover {
      --tw-shadow: 0px 8px 32px var(--tw-shadow-color, #2c2c2c14);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-lg:hover {
      --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-md:hover {
      --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:ring-2:hover {
      --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:ring-warm-taupe\/40:hover {
      --tw-ring-color: var(--warm-taupe);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:ring-warm-taupe\/40:hover {
        --tw-ring-color: color-mix(in oklab, var(--warm-taupe) 40%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:ring-offset-2:hover {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }

  @media (hover: hover) {
    .hover\:ring-offset-warm-white:hover {
      --tw-ring-offset-color: var(--warm-white);
    }
  }

  .focus\:border-deep-charcoal:focus {
    border-color: var(--deep-charcoal);
  }

  .focus\:border-sage-green:focus {
    border-color: var(--sage-green);
  }

  .focus\:border-sage-green\/50:focus {
    border-color: var(--sage-green);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus\:border-sage-green\/50:focus {
      border-color: color-mix(in oklab, var(--sage-green) 50%, transparent);
    }
  }

  .focus\:bg-accent:focus {
    background-color: var(--accent);
  }

  .focus\:text-accent-foreground:focus {
    color: var(--accent-foreground);
  }

  .focus\:shadow-\[0px_0px_0px_3px_rgba\(139\,155\,142\,0\.1\)\]:focus {
    --tw-shadow: 0px 0px 0px 3px var(--tw-shadow-color, #8b9b8e1a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus\:ring-2:focus {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus\:ring-deep-charcoal\/10:focus {
    --tw-ring-color: var(--deep-charcoal);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus\:ring-deep-charcoal\/10:focus {
      --tw-ring-color: color-mix(in oklab, var(--deep-charcoal) 10%, transparent);
    }
  }

  .focus\:outline-none:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  .focus-visible\:scale-110:focus-visible {
    --tw-scale-x: 110%;
    --tw-scale-y: 110%;
    --tw-scale-z: 110%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .focus-visible\:border-ring:focus-visible {
    border-color: var(--ring);
  }

  .focus-visible\:ring-\[3px\]:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-visible\:ring-ring\/50:focus-visible {
    --tw-ring-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-ring\/50:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  .focus-visible\:outline-hidden:focus-visible {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .focus-visible\:outline-hidden:focus-visible {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .disabled\:pointer-events-none:disabled {
    pointer-events: none;
  }

  .disabled\:cursor-not-allowed:disabled {
    cursor: not-allowed;
  }

  .disabled\:opacity-40:disabled {
    opacity: .4;
  }

  .disabled\:opacity-50:disabled {
    opacity: .5;
  }

  .aria-invalid\:border-destructive[aria-invalid="true"] {
    border-color: var(--destructive);
  }

  .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .data-\[disabled\]\:pointer-events-none[data-disabled] {
    pointer-events: none;
  }

  .data-\[disabled\]\:opacity-50[data-disabled] {
    opacity: .5;
  }

  .data-\[orientation\=horizontal\]\:h-1[data-orientation="horizontal"] {
    height: calc(var(--spacing) * 1);
  }

  .data-\[orientation\=horizontal\]\:h-full[data-orientation="horizontal"] {
    height: 100%;
  }

  .data-\[orientation\=horizontal\]\:w-full[data-orientation="horizontal"] {
    width: 100%;
  }

  .data-\[orientation\=vertical\]\:h-full[data-orientation="vertical"] {
    height: 100%;
  }

  .data-\[orientation\=vertical\]\:min-h-44[data-orientation="vertical"] {
    min-height: calc(var(--spacing) * 44);
  }

  .data-\[orientation\=vertical\]\:w-1\.5[data-orientation="vertical"] {
    width: calc(var(--spacing) * 1.5);
  }

  .data-\[orientation\=vertical\]\:w-auto[data-orientation="vertical"] {
    width: auto;
  }

  .data-\[orientation\=vertical\]\:w-full[data-orientation="vertical"] {
    width: 100%;
  }

  .data-\[orientation\=vertical\]\:flex-col[data-orientation="vertical"] {
    flex-direction: column;
  }

  .data-\[placeholder\]\:text-muted-foreground[data-placeholder] {
    color: var(--muted-foreground);
  }

  .data-\[side\=bottom\]\:translate-y-1[data-side="bottom"] {
    --tw-translate-y: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=bottom\]\:slide-in-from-top-2[data-side="bottom"] {
    --tw-enter-translate-y: calc(2 * var(--spacing) * -1);
  }

  .data-\[side\=left\]\:-translate-x-1[data-side="left"] {
    --tw-translate-x: calc(var(--spacing) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=left\]\:slide-in-from-right-2[data-side="left"] {
    --tw-enter-translate-x: calc(2 * var(--spacing));
  }

  .data-\[side\=right\]\:translate-x-1[data-side="right"] {
    --tw-translate-x: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=right\]\:slide-in-from-left-2[data-side="right"] {
    --tw-enter-translate-x: calc(2 * var(--spacing) * -1);
  }

  .data-\[side\=top\]\:-translate-y-1[data-side="top"] {
    --tw-translate-y: calc(var(--spacing) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=top\]\:slide-in-from-bottom-2[data-side="top"] {
    --tw-enter-translate-y: calc(2 * var(--spacing));
  }

  .data-\[size\=default\]\:h-9[data-size="default"] {
    height: calc(var(--spacing) * 9);
  }

  .data-\[size\=sm\]\:h-8[data-size="sm"] {
    height: calc(var(--spacing) * 8);
  }

  :is(.\*\:data-\[slot\=select-value\]\:line-clamp-1 > *)[data-slot="select-value"] {
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  :is(.\*\:data-\[slot\=select-value\]\:flex > *)[data-slot="select-value"] {
    display: flex;
  }

  :is(.\*\:data-\[slot\=select-value\]\:items-center > *)[data-slot="select-value"] {
    align-items: center;
  }

  :is(.\*\:data-\[slot\=select-value\]\:gap-2 > *)[data-slot="select-value"] {
    gap: calc(var(--spacing) * 2);
  }

  .data-\[state\=closed\]\:animate-out[data-state="closed"] {
    animation: exit var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[state\=closed\]\:fade-out-0[data-state="closed"] {
    --tw-exit-opacity: 0;
  }

  .data-\[state\=closed\]\:zoom-out-95[data-state="closed"] {
    --tw-exit-scale: .95;
  }

  .data-\[state\=open\]\:animate-in[data-state="open"] {
    animation: enter var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[state\=open\]\:fade-in-0[data-state="open"] {
    --tw-enter-opacity: 0;
  }

  .data-\[state\=open\]\:zoom-in-95[data-state="open"] {
    --tw-enter-scale: .95;
  }

  @media (width >= 40rem) {
    .sm\:ml-6 {
      margin-left: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 40rem) {
    .sm\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 40rem) {
    .sm\:px-0 {
      padding-inline: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 40rem) {
    .sm\:px-6 {
      padding-inline: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 40rem) {
    .sm\:py-8 {
      padding-block: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 40rem) {
    .sm\:py-12 {
      padding-block: calc(var(--spacing) * 12);
    }
  }

  @media (width >= 48rem) {
    .md\:col-span-2 {
      grid-column: span 2 / span 2;
    }
  }

  @media (width >= 48rem) {
    .md\:col-start-1 {
      grid-column-start: 1;
    }
  }

  @media (width >= 48rem) {
    .md\:col-start-2 {
      grid-column-start: 2;
    }
  }

  @media (width >= 48rem) {
    .md\:row-start-1 {
      grid-row-start: 1;
    }
  }

  @media (width >= 48rem) {
    .md\:ml-40 {
      margin-left: calc(var(--spacing) * 40);
    }
  }

  @media (width >= 48rem) {
    .md\:ml-auto {
      margin-left: auto;
    }
  }

  @media (width >= 48rem) {
    .md\:block {
      display: block;
    }
  }

  @media (width >= 48rem) {
    .md\:flex {
      display: flex;
    }
  }

  @media (width >= 48rem) {
    .md\:hidden {
      display: none;
    }
  }

  @media (width >= 48rem) {
    .md\:grid-flow-dense {
      grid-auto-flow: dense;
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-5 {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-\[60\%_40\%\] {
      grid-template-columns: 60% 40%;
    }
  }

  @media (width >= 48rem) {
    .md\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 48rem) {
    .md\:px-12 {
      padding-inline: calc(var(--spacing) * 12);
    }
  }

  @media (width >= 48rem) {
    .md\:px-16 {
      padding-inline: calc(var(--spacing) * 16);
    }
  }

  @media (width >= 48rem) {
    .md\:py-16 {
      padding-block: calc(var(--spacing) * 16);
    }
  }

  @media (width >= 48rem) {
    .md\:py-20 {
      padding-block: calc(var(--spacing) * 20);
    }
  }

  @media (width >= 48rem) {
    .md\:pr-12 {
      padding-right: calc(var(--spacing) * 12);
    }
  }

  @media (width >= 48rem) {
    .md\:pl-12 {
      padding-left: calc(var(--spacing) * 12);
    }
  }

  @media (width >= 48rem) {
    .md\:text-right {
      text-align: right;
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-\[1\.2fr_0\.8fr\] {
      grid-template-columns: 1.2fr .8fr;
    }
  }

  @media (width >= 64rem) {
    .lg\:gap-24 {
      gap: calc(var(--spacing) * 24);
    }
  }

  .dark\:bg-input\/30:is(.dark *) {
    background-color: var(--input);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-input\/30:is(.dark *) {
      background-color: color-mix(in oklab, var(--input) 30%, transparent);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-input\/50:is(.dark *):hover {
      background-color: var(--input);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-input\/50:is(.dark *):hover {
        background-color: color-mix(in oklab, var(--input) 50%, transparent);
      }
    }
  }

  .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .\[\&_\[data-slot\=slider-range\]\]\:bg-sage-green [data-slot="slider-range"] {
    background-color: var(--sage-green);
  }

  .\[\&_\[data-slot\=slider-thumb\]\]\:h-5 [data-slot="slider-thumb"] {
    height: calc(var(--spacing) * 5);
  }

  .\[\&_\[data-slot\=slider-thumb\]\]\:w-5 [data-slot="slider-thumb"] {
    width: calc(var(--spacing) * 5);
  }

  .\[\&_\[data-slot\=slider-thumb\]\]\:border-sage-green [data-slot="slider-thumb"] {
    border-color: var(--sage-green);
  }

  .\[\&_\[data-slot\=slider-thumb\]\]\:bg-sage-green [data-slot="slider-thumb"] {
    background-color: var(--sage-green);
  }

  .\[\&_\[data-slot\=slider-track\]\]\:h-1 [data-slot="slider-track"] {
    height: calc(var(--spacing) * 1);
  }

  .\[\&_svg\]\:pointer-events-none svg {
    pointer-events: none;
  }

  .\[\&_svg\]\:shrink-0 svg {
    flex-shrink: 0;
  }

  .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*="size-"]) {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .\[\&_svg\:not\(\[class\*\=\'text-\'\]\)\]\:text-muted-foreground svg:not([class*="text-"]) {
    color: var(--muted-foreground);
  }

  :is(.\*\:\[span\]\:last\:flex > *):is(span):last-child {
    display: flex;
  }

  :is(.\*\:\[span\]\:last\:items-center > *):is(span):last-child {
    align-items: center;
  }

  :is(.\*\:\[span\]\:last\:gap-2 > *):is(span):last-child {
    gap: calc(var(--spacing) * 2);
  }

  .text-warm-white {
    color: #faf7f2;
  }

  .text-deep-charcoal {
    color: #2c2c2c;
  }

  .text-warm-taupe {
    color: #c4b5a0;
  }

  .text-sage-green {
    color: #8b9b8e;
  }

  .bg-warm-white {
    background-color: #faf7f2;
  }

  .bg-deep-charcoal {
    background-color: #2c2c2c;
  }

  .bg-warm-taupe {
    background-color: #c4b5a0;
  }

  .bg-sage-green {
    background-color: #8b9b8e;
  }

  .border-deep-charcoal {
    border-color: #2c2c2c;
  }

  .hover\:bg-warm-taupe-dark:hover {
    background-color: #b8a890;
  }

  .hover\:bg-deep-charcoal:hover {
    background-color: #2c2c2c;
  }

  .hover\:text-warm-white:hover {
    color: #faf7f2;
  }

  .hover\:text-warm-taupe:hover {
    color: #c4b5a0;
  }
}

:root {
  --warm-white: #faf7f2;
  --deep-charcoal: #2c2c2c;
  --warm-taupe: #c4b5a0;
  --sage-green: #8b9b8e;
  --success: #7a9b7f;
  --warning: #c89b6f;
  --error: #b87a6f;
  --gray-900: #2c2c2c;
  --gray-700: #4a4a4a;
  --gray-500: #8b8b8b;
  --gray-300: #c4c4c4;
  --gray-100: #e8e8e8;
  --gray-50: #f5f5f5;
  --font-size: 16px;
  --background: #faf7f2;
  --foreground: #2c2c2c;
  --card: #faf7f2;
  --card-foreground: #2c2c2c;
  --popover: #faf7f2;
  --popover-foreground: #2c2c2c;
  --primary: #c4b5a0;
  --primary-foreground: #2c2c2c;
  --secondary: #2c2c2c;
  --secondary-foreground: #faf7f2;
  --muted: #f5f5f5;
  --muted-foreground: #8b8b8b;
  --accent: #8b9b8e;
  --accent-foreground: #2c2c2c;
  --destructive: #b87a6f;
  --destructive-foreground: #faf7f2;
  --border: #2c2c2c33;
  --input: transparent;
  --input-background: #faf7f2;
  --switch-background: #c4c4c4;
  --font-weight-medium: 500;
  --font-weight-normal: 400;
  --font-weight-bold: 700;
  --ring: #2c2c2c1a;
  --chart-1: #c4b5a0;
  --chart-2: #8b9b8e;
  --chart-3: #7a9b7f;
  --chart-4: #c89b6f;
  --chart-5: #b87a6f;
  --radius: .5rem;
  --sidebar: #faf7f2;
  --sidebar-foreground: #2c2c2c;
  --sidebar-primary: #c4b5a0;
  --sidebar-primary-foreground: #2c2c2c;
  --sidebar-accent: #8b9b8e;
  --sidebar-accent-foreground: #2c2c2c;
  --sidebar-border: #e8e8e8;
  --sidebar-ring: #2c2c2c1a;
}

.dark {
  --background: #2c2c2c;
  --foreground: #faf7f2;
  --card: #2c2c2c;
  --card-foreground: #faf7f2;
  --popover: #2c2c2c;
  --popover-foreground: #faf7f2;
  --primary: #c4b5a0;
  --primary-foreground: #2c2c2c;
  --secondary: #4a4a4a;
  --secondary-foreground: #faf7f2;
  --muted: #4a4a4a;
  --muted-foreground: #8b8b8b;
  --accent: #8b9b8e;
  --accent-foreground: #faf7f2;
  --destructive: #b87a6f;
  --destructive-foreground: #faf7f2;
  --border: #faf7f233;
  --input: #4a4a4a;
  --ring: #faf7f21a;
  --sidebar: #2c2c2c;
  --sidebar-foreground: #faf7f2;
  --sidebar-primary: #c4b5a0;
  --sidebar-primary-foreground: #2c2c2c;
  --sidebar-accent: #4a4a4a;
  --sidebar-accent-foreground: #faf7f2;
  --sidebar-border: #4a4a4a;
  --sidebar-ring: #faf7f21a;
}

@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-gradient-position {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}

@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-leading {
  syntax: "*";
  inherits: false
}

@property --tw-tracking {
  syntax: "*";
  inherits: false
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-blur {
  syntax: "*";
  inherits: false
}

@property --tw-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-invert {
  syntax: "*";
  inherits: false
}

@property --tw-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-duration {
  syntax: "*";
  inherits: false
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes bounce {
  0%, 100% {
    animation-timing-function: cubic-bezier(.8, 0, 1, 1);
    transform: translateY(-25%);
  }

  50% {
    animation-timing-function: cubic-bezier(0, 0, .2, 1);
    transform: none;
  }
}

@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}

@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}
